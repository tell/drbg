language: cpp
sudo: required
service:
- docker
env:
  global:
  - MY_NAME=travis-ci
  - MY_TARGET_MOUNT=/tell/sodium-drbg
matrix:
  include:
  - os: linux
    dist: xenial
    compiler: gcc
    env:
    - MY_MODE="cpp"
    - MY_CPATH=cybozulib/include
    - MY_TARGET_DIST=ubuntu:18.04
  - os: linux
    dist: xenial
    language: python
    env:
    - MY_MODE="python"
    - MY_TARGET_DIST=ubuntu:18.04
before_install:
- env
- docker pull $MY_TARGET_DIST
- docker run --name $MY_NAME -v $TRAVIS_BUILD_DIR:$MY_TARGET_MOUNT -td $MY_TARGET_DIST /bin/bash
install:
- docker exec -ti $MY_NAME bash -c "apt update" > /dev/null
- docker exec -ti $MY_NAME bash -c "apt install -y build-essential git pkg-config" > /dev/null
- docker exec -ti $MY_NAME bash -c "apt install -y time" > /dev/null
- docker exec -ti $MY_NAME bash -c "apt install -y libsodium-dev" > /dev/null
- docker exec -ti $MY_NAME bash -c "apt install -y python3-pytest" > /dev/null
- docker exec -ti $MY_NAME bash -c "cd $MY_TARGET_MOUNT ; git clone https://github.com/herumi/cybozulib.git" > /dev/null
before_script:
- docker exec -ti $MY_NAME bash -c "env"
- [[ "cpp" == $MY_MODE ]] && docker exec -ti $MY_NAME bash -c "$CC --version"
- [[ "cpp" == $MY_MODE ]] && docker exec -ti $MY_NAME bash -c "$CXX --version"
script:
- [[ "cpp" == $MY_MODE ]] && docker exec -ti $MY_NAME bash -c "cd $MY_TARGET_MOUNT ; env CPATH=$MY_CPATH make CXX=$CXX"
- [[ "cpp" == $MY_MODE ]] && docker exec -ti $MY_NAME bash -c "cd $MY_TARGET_MOUNT ; make check"
- [[ "python" == $MY_MODE ]] && docker exec -ti $MY_NAME bash -c "cd $MY_TARGET_MOUNT ; py.test-3"
# after_failure:
# - tail -n 1000 make.log
notifications:
  on_success: change
  on_failure: always
# vim: set expandtab shiftwidth=2 softtabstop=2 :
